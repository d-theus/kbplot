!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AGLWIDGET_H	h/aglwidget.h	2;"	d
AGLWidget	h/aglwidget.h	/^class AGLWidget {$/;"	c
AGLWidget::GLinitialize	h/aglwidget.h	/^	virtual void GLinitialize()=0;$/;"	p	class:AGLWidget	access:public	implementation:pure virtual	signature:()
AGLWidget::GLpaint	h/aglwidget.h	/^	virtual void GLpaint()=0;$/;"	p	class:AGLWidget	access:public	implementation:pure virtual	signature:()
AGLWidget::GLresize	h/aglwidget.h	/^	virtual void GLresize(int nh,int nw)=0;$/;"	p	class:AGLWidget	access:public	implementation:pure virtual	signature:(int nh,int nw)
AGLWidget::addObject	h/aglwidget.h	/^	virtual void addObject(string, GraphicalObject*)=0;$/;"	p	class:AGLWidget	access:public	implementation:pure virtual	signature:(string, GraphicalObject*)
AGLWidget::clearScene	h/aglwidget.h	/^	virtual void clearScene()=0;$/;"	p	class:AGLWidget	access:public	implementation:pure virtual	signature:()
AGLWidget::setWorkingArea	h/aglwidget.h	/^	virtual void setWorkingArea(double xmin, double xmax, double ymin, double ymax)=0;$/;"	p	class:AGLWidget	access:public	implementation:pure virtual	signature:(double xmin, double xmax, double ymin, double ymax)
AGLWidget::subscribeToMouse	h/aglwidget.h	/^	virtual void subscribeToMouse(IMouseEventListener *subscriber)=0;$/;"	p	class:AGLWidget	access:public	implementation:pure virtual	signature:(IMouseEventListener *subscriber)
AGLWidget::trGLToScreenx	h/aglwidget.h	/^	virtual int trGLToScreenx(double)=0;$/;"	p	class:AGLWidget	access:public	implementation:pure virtual	signature:(double)
AGLWidget::trGLToScreeny	h/aglwidget.h	/^	virtual int trGLToScreeny(double)=0;$/;"	p	class:AGLWidget	access:public	implementation:pure virtual	signature:(double)
AGLWidget::trScreenToGLx	h/aglwidget.h	/^	virtual double trScreenToGLx(int)=0;$/;"	p	class:AGLWidget	access:public	implementation:pure virtual	signature:(int)
AGLWidget::trScreenToGLy	h/aglwidget.h	/^	virtual double trScreenToGLy(int)=0;$/;"	p	class:AGLWidget	access:public	implementation:pure virtual	signature:(int)
AGLWidget::~AGLWidget	h/aglwidget.h	/^	virtual ~AGLWidget(){};$/;"	f	class:AGLWidget	access:public	implementation:virtual	signature:()
AR	Makefile	/^AR            = ar cqs$/;"	m
CC	Makefile	/^CC            = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS        = -pipe -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -Wall -W -D_REENTRANT -fPIE $(DEFINES)$/;"	m
CHK_DIR_EXISTS	Makefile	/^CHK_DIR_EXISTS= test -d$/;"	m
COMPRESS	Makefile	/^COMPRESS      = gzip -9f$/;"	m
COPY	Makefile	/^COPY          = cp -f$/;"	m
COPY_DIR	Makefile	/^COPY_DIR      = cp -f -R$/;"	m
COPY_FILE	Makefile	/^COPY_FILE     = cp -f$/;"	m
CXX	Makefile	/^CXX           = g++$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS      = -pipe -w -DDEBUG -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -Wall -W -D_REENTRANT -fPIE $(DEFINES)$/;"	m
DEFINES	Makefile	/^DEFINES       = -DQT_NO_DEBUG -DQT_OPENGL_LIB -DQT_WIDGETS_LIB -DQT_GUI_LIB -DQT_CORE_LIB$/;"	m
DEL_DIR	Makefile	/^DEL_DIR       = rmdir$/;"	m
DEL_FILE	Makefile	/^DEL_FILE      = rm -f$/;"	m
DESTDIR	Makefile	/^DESTDIR       = bin\/#avoid trailing-slash linebreak$/;"	m
DIST	Makefile	/^DIST          = \/usr\/lib\/qt\/mkspecs\/features\/spec_pre.prf \\$/;"	m
DataSet	h/kbplot.h	/^		DataSet(vector<Txy> *data);$/;"	p	struct:DataSet	access:public	signature:(vector<Txy> *data)
DataSet	h/kbplot.h	/^struct DataSet {$/;"	s
DataSet	src/kbplot.cpp	/^DataSet::DataSet(vector<Txy> *data){$/;"	f	class:DataSet	signature:(vector<Txy> *data)
DataSet::DataSet	h/kbplot.h	/^		DataSet(vector<Txy> *data);$/;"	p	struct:DataSet	access:public	signature:(vector<Txy> *data)
DataSet::DataSet	src/kbplot.cpp	/^DataSet::DataSet(vector<Txy> *data){$/;"	f	class:DataSet	signature:(vector<Txy> *data)
DataSet::data	h/kbplot.h	/^		vector<Txy> *data;$/;"	m	struct:DataSet	access:private
DataSet::getData	h/kbplot.h	/^		vector<Txy> *getData()const;$/;"	p	struct:DataSet	access:public	signature:() const
DataSet::getData	src/kbplot.cpp	/^vector<Txy> * DataSet::getData()const{$/;"	f	class:DataSet	signature:() const
DataSet::~DataSet	h/kbplot.h	/^		virtual ~DataSet();$/;"	p	struct:DataSet	access:public	implementation:virtual	signature:()
DataSet::~DataSet	src/kbplot.cpp	/^DataSet::~DataSet(){$/;"	f	class:DataSet	signature:()
DataType	h/kbplot.h	/^	} DataType; $/;"	t	class:RawData	typeref:enum:RawData::__anon5	access:private
EVENT_H	h/event.h	2;"	d
GLWIDGET_H	h/glwidget.h	2;"	d
GLWidget	h/glwidget.h	/^	GLWidget();$/;"	p	class:GLWidget	access:public	signature:()
GLWidget	h/glwidget.h	/^class GLWidget : public QGLWidget, public AGLWidget$/;"	c	inherits:QGLWidget,AGLWidget
GLWidget	src/glwidget.cpp	/^GLWidget::GLWidget(): QGLWidget()$/;"	f	class:GLWidget	signature:()
GLWidget::GLWidget	h/glwidget.h	/^	GLWidget();$/;"	p	class:GLWidget	access:public	signature:()
GLWidget::GLWidget	src/glwidget.cpp	/^GLWidget::GLWidget(): QGLWidget()$/;"	f	class:GLWidget	signature:()
GLWidget::GLinitialize	h/glwidget.h	/^	virtual void GLinitialize();$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:()
GLWidget::GLinitialize	src/glwidget.cpp	/^void GLWidget::GLinitialize(){$/;"	f	class:GLWidget	signature:()
GLWidget::GLpaint	h/glwidget.h	/^	virtual void GLpaint();$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:()
GLWidget::GLpaint	src/glwidget.cpp	/^void GLWidget::GLpaint(){$/;"	f	class:GLWidget	signature:()
GLWidget::GLresize	h/glwidget.h	/^	virtual void GLresize(int nw, int nh);$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:(int nw, int nh)
GLWidget::GLresize	src/glwidget.cpp	/^void GLWidget::GLresize(int nw, int nh){$/;"	f	class:GLWidget	signature:(int nw, int nh)
GLWidget::GLupdate	h/glwidget.h	/^	virtual void GLupdate();$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:()
GLWidget::GLupdate	src/glwidget.cpp	/^void GLWidget::GLupdate(){$/;"	f	class:GLWidget	signature:()
GLWidget::addObject	h/glwidget.h	/^	virtual void addObject(string, GraphicalObject*);$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:(string, GraphicalObject*)
GLWidget::addObject	src/glwidget.cpp	/^void GLWidget::addObject(string key, GraphicalObject *p){$/;"	f	class:GLWidget	signature:(string key, GraphicalObject *p)
GLWidget::clearScene	h/glwidget.h	/^	virtual void clearScene();$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:()
GLWidget::clearScene	src/glwidget.cpp	/^void GLWidget::clearScene(){$/;"	f	class:GLWidget	signature:()
GLWidget::initializeGL	h/glwidget.h	/^	void initializeGL();$/;"	p	class:GLWidget	access:public	signature:()
GLWidget::initializeGL	src/glwidget.cpp	/^void GLWidget::initializeGL() {$/;"	f	class:GLWidget	signature:()
GLWidget::metaObject	moc_glwidget.cpp	/^const QMetaObject *GLWidget::metaObject() const$/;"	f	class:GLWidget	signature:() const
GLWidget::mouseListeners	h/glwidget.h	/^	vector<IMouseEventListener*> mouseListeners;$/;"	m	class:GLWidget	access:private
GLWidget::mouseMoveEvent	h/glwidget.h	/^	void mouseMoveEvent(QMouseEvent *e);$/;"	p	class:GLWidget	access:public	signature:(QMouseEvent *e)
GLWidget::mouseMoveEvent	src/glwidget.cpp	/^void GLWidget::mouseMoveEvent(QMouseEvent *e){$/;"	f	class:GLWidget	signature:(QMouseEvent *e)
GLWidget::mousePressEvent	h/glwidget.h	/^	void mousePressEvent(QMouseEvent *e);$/;"	p	class:GLWidget	access:public	signature:(QMouseEvent *e)
GLWidget::mousePressEvent	src/glwidget.cpp	/^void GLWidget::mousePressEvent(QMouseEvent *e){$/;"	f	class:GLWidget	signature:(QMouseEvent *e)
GLWidget::mouseReleaseEvent	h/glwidget.h	/^	void mouseReleaseEvent(QMouseEvent *e);$/;"	p	class:GLWidget	access:public	signature:(QMouseEvent *e)
GLWidget::mouseReleaseEvent	src/glwidget.cpp	/^void GLWidget::mouseReleaseEvent(QMouseEvent *e){$/;"	f	class:GLWidget	signature:(QMouseEvent *e)
GLWidget::mouseX	h/glwidget.h	/^	int mouseX, mouseY;$/;"	m	class:GLWidget	access:private
GLWidget::mouseY	h/glwidget.h	/^	int mouseX, mouseY;$/;"	m	class:GLWidget	access:private
GLWidget::objects	h/glwidget.h	/^	map<string, GraphicalObject*> objects;$/;"	m	class:GLWidget	access:private
GLWidget::paintGL	h/glwidget.h	/^	void paintGL();$/;"	p	class:GLWidget	access:public	signature:()
GLWidget::paintGL	src/glwidget.cpp	/^void GLWidget::paintGL(){$/;"	f	class:GLWidget	signature:()
GLWidget::qt_metacall	moc_glwidget.cpp	/^int GLWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GLWidget	signature:(QMetaObject::Call _c, int _id, void **_a)
GLWidget::qt_metacast	moc_glwidget.cpp	/^void *GLWidget::qt_metacast(const char *_clname)$/;"	f	class:GLWidget	signature:(const char *_clname)
GLWidget::qt_static_metacall	moc_glwidget.cpp	/^void GLWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GLWidget	signature:(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
GLWidget::removeAt	h/glwidget.h	/^	virtual void removeAt(int);$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:(int)
GLWidget::removeAt	src/glwidget.cpp	/^void GLWidget::removeAt(int){$/;"	f	class:GLWidget	signature:(int)
GLWidget::removeWithPrefix	h/glwidget.h	/^	virtual void removeWithPrefix(string);$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:(string)
GLWidget::removeWithPrefix	src/glwidget.cpp	/^void GLWidget::removeWithPrefix(string key){$/;"	f	class:GLWidget	signature:(string key)
GLWidget::resizeGL	h/glwidget.h	/^	void resizeGL(int nw, int nh);$/;"	p	class:GLWidget	access:public	signature:(int nw, int nh)
GLWidget::resizeGL	src/glwidget.cpp	/^void GLWidget::resizeGL(int nw, int nh){$/;"	f	class:GLWidget	signature:(int nw, int nh)
GLWidget::setWorkingArea	h/glwidget.h	/^	virtual void setWorkingArea(double xmin, double xmax, double ymin, double ymax);$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:(double xmin, double xmax, double ymin, double ymax)
GLWidget::setWorkingArea	src/glwidget.cpp	/^void GLWidget::setWorkingArea(double xmin, double xmax, double ymin, double ymax){$/;"	f	class:GLWidget	signature:(double xmin, double xmax, double ymin, double ymax)
GLWidget::staticMetaObject	moc_glwidget.cpp	/^const QMetaObject GLWidget::staticMetaObject = {$/;"	m	class:GLWidget	file:
GLWidget::subscribeToMouse	h/glwidget.h	/^	virtual void subscribeToMouse(IMouseEventListener*);$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:(IMouseEventListener*)
GLWidget::subscribeToMouse	src/glwidget.cpp	/^void GLWidget::subscribeToMouse(IMouseEventListener*l){$/;"	f	class:GLWidget	signature:(IMouseEventListener*l)
GLWidget::trGLToScreenx	h/glwidget.h	/^	virtual int trGLToScreenx(double);$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:(double)
GLWidget::trGLToScreenx	src/glwidget.cpp	/^int GLWidget::trGLToScreenx(double x){$/;"	f	class:GLWidget	signature:(double x)
GLWidget::trGLToScreeny	h/glwidget.h	/^	virtual int trGLToScreeny(double);$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:(double)
GLWidget::trGLToScreeny	src/glwidget.cpp	/^int GLWidget::trGLToScreeny(double y){$/;"	f	class:GLWidget	signature:(double y)
GLWidget::trScreenToGLx	h/glwidget.h	/^	virtual double trScreenToGLx(int);$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:(int)
GLWidget::trScreenToGLx	src/glwidget.cpp	/^double GLWidget::trScreenToGLx(int x){$/;"	f	class:GLWidget	signature:(int x)
GLWidget::trScreenToGLy	h/glwidget.h	/^	virtual double trScreenToGLy(int);$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:(int)
GLWidget::trScreenToGLy	src/glwidget.cpp	/^double GLWidget::trScreenToGLy(int y){$/;"	f	class:GLWidget	signature:(int y)
GLWidget::wheelEvent	h/glwidget.h	/^	void wheelEvent(QWheelEvent *e);$/;"	p	class:GLWidget	access:public	signature:(QWheelEvent *e)
GLWidget::wheelEvent	src/glwidget.cpp	/^void GLWidget::wheelEvent(QWheelEvent *e){$/;"	f	class:GLWidget	signature:(QWheelEvent *e)
GLWidget::~GLWidget	h/glwidget.h	/^	virtual ~GLWidget();$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:()
GLWidget::~GLWidget	src/glwidget.cpp	/^ GLWidget::~GLWidget(){$/;"	f	class:GLWidget	signature:()
GLinitialize	h/aglwidget.h	/^	virtual void GLinitialize()=0;$/;"	p	class:AGLWidget	access:public	implementation:pure virtual	signature:()
GLinitialize	h/glwidget.h	/^	virtual void GLinitialize();$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:()
GLinitialize	src/glwidget.cpp	/^void GLWidget::GLinitialize(){$/;"	f	class:GLWidget	signature:()
GLpaint	h/aglwidget.h	/^	virtual void GLpaint()=0;$/;"	p	class:AGLWidget	access:public	implementation:pure virtual	signature:()
GLpaint	h/glwidget.h	/^	virtual void GLpaint();$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:()
GLpaint	src/glwidget.cpp	/^void GLWidget::GLpaint(){$/;"	f	class:GLWidget	signature:()
GLresize	h/aglwidget.h	/^	virtual void GLresize(int nh,int nw)=0;$/;"	p	class:AGLWidget	access:public	implementation:pure virtual	signature:(int nh,int nw)
GLresize	h/glwidget.h	/^	virtual void GLresize(int nw, int nh);$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:(int nw, int nh)
GLresize	src/glwidget.cpp	/^void GLWidget::GLresize(int nw, int nh){$/;"	f	class:GLWidget	signature:(int nw, int nh)
GLupdate	h/glwidget.h	/^	virtual void GLupdate();$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:()
GLupdate	src/glwidget.cpp	/^void GLWidget::GLupdate(){$/;"	f	class:GLWidget	signature:()
GRAPHICAL_OBJECT	h/graphical_object.h	2;"	d
GraphicalObject	h/graphical_object.h	/^class GraphicalObject {$/;"	c
GraphicalObject::after_draw	h/graphical_object.h	/^		void after_draw()const;$/;"	p	class:GraphicalObject	access:protected	signature:() const
GraphicalObject::after_draw	src/graphical_object.cpp	/^void GraphicalObject::after_draw()const{$/;"	f	class:GraphicalObject	signature:() const
GraphicalObject::before_draw	h/graphical_object.h	/^		void before_draw()const;$/;"	p	class:GraphicalObject	access:protected	signature:() const
GraphicalObject::before_draw	src/graphical_object.cpp	/^void GraphicalObject::before_draw()const{$/;"	f	class:GraphicalObject	signature:() const
GraphicalObject::draw	h/graphical_object.h	/^		virtual void draw() const = 0;$/;"	p	class:GraphicalObject	access:public	implementation:pure virtual	signature:() const
GraphicalObject::isFixed	h/graphical_object.h	/^		bool isFixed= false;$/;"	m	class:GraphicalObject	access:protected
GraphicalObject::isScaled	h/graphical_object.h	/^		bool isScaled = false;$/;"	m	class:GraphicalObject	access:protected
GraphicalObject::isTranslated	h/graphical_object.h	/^		bool isTranslated = false;$/;"	m	class:GraphicalObject	access:protected
GraphicalObject::scX	h/graphical_object.h	/^		double scX, scY;$/;"	m	class:GraphicalObject	access:protected
GraphicalObject::scY	h/graphical_object.h	/^		double scX, scY;$/;"	m	class:GraphicalObject	access:protected
GraphicalObject::setScale	h/graphical_object.h	/^		void setScale(double,double);$/;"	p	class:GraphicalObject	access:public	signature:(double,double)
GraphicalObject::setScale	src/graphical_object.cpp	/^void GraphicalObject::setScale(double x, double y){$/;"	f	class:GraphicalObject	signature:(double x, double y)
GraphicalObject::setTranslation	h/graphical_object.h	/^		void setTranslation(double,double);$/;"	p	class:GraphicalObject	access:public	signature:(double,double)
GraphicalObject::setTranslation	src/graphical_object.cpp	/^void GraphicalObject::setTranslation(double x, double y){$/;"	f	class:GraphicalObject	signature:(double x, double y)
GraphicalObject::style	h/graphical_object.h	/^		Style style;$/;"	m	class:GraphicalObject	access:public
GraphicalObject::toggleFixed	h/graphical_object.h	/^		void toggleFixed(bool b = true);$/;"	p	class:GraphicalObject	access:public	signature:(bool b = true)
GraphicalObject::toggleFixed	src/graphical_object.cpp	/^void GraphicalObject::toggleFixed(bool b){$/;"	f	class:GraphicalObject	signature:(bool b)
GraphicalObject::toggleScaled	h/graphical_object.h	/^		void toggleScaled(bool b = true);$/;"	p	class:GraphicalObject	access:public	signature:(bool b = true)
GraphicalObject::toggleScaled	src/graphical_object.cpp	/^void GraphicalObject::toggleScaled(bool b){$/;"	f	class:GraphicalObject	signature:(bool b)
GraphicalObject::toggleTranslated	h/graphical_object.h	/^		void toggleTranslated(bool b = true);$/;"	p	class:GraphicalObject	access:public	signature:(bool b = true)
GraphicalObject::toggleTranslated	src/graphical_object.cpp	/^void GraphicalObject::toggleTranslated(bool b){$/;"	f	class:GraphicalObject	signature:(bool b)
GraphicalObject::trX	h/graphical_object.h	/^		double trX, trY;$/;"	m	class:GraphicalObject	access:protected
GraphicalObject::trY	h/graphical_object.h	/^		double trX, trY;$/;"	m	class:GraphicalObject	access:protected
GraphicalObject::~GraphicalObject	h/graphical_object.h	/^		virtual ~GraphicalObject(){};$/;"	f	class:GraphicalObject	access:public	implementation:virtual	signature:()
IMouseEventListener	h/event.h	/^class IMouseEventListener {$/;"	c
IMouseEventListener::mouseMoveEvent	h/event.h	/^	virtual void mouseMoveEvent(int,int)=0;$/;"	p	class:IMouseEventListener	access:public	implementation:pure virtual	signature:(int,int)
IMouseEventListener::mousePressEvent	h/event.h	/^	virtual void mousePressEvent(int,int)=0;$/;"	p	class:IMouseEventListener	access:public	implementation:pure virtual	signature:(int,int)
IMouseEventListener::mouseReleaseEvent	h/event.h	/^	virtual void mouseReleaseEvent(int,int)=0;$/;"	p	class:IMouseEventListener	access:public	implementation:pure virtual	signature:(int,int)
IMouseEventListener::mouseScrollEvent	h/event.h	/^	virtual void mouseScrollEvent(int)=0;$/;"	p	class:IMouseEventListener	access:public	implementation:pure virtual	signature:(int)
IMouseEventListener::~IMouseEventListener	h/event.h	/^	virtual ~IMouseEventListener() {};$/;"	f	class:IMouseEventListener	access:public	implementation:virtual	signature:()
INCPATH	Makefile	/^INCPATH       = -I\/usr\/lib\/qt\/mkspecs\/linux-g++ -I. -Ih -I\/usr\/include\/qt -I\/usr\/include\/qt\/QtOpenGL -I\/usr\/include\/qt\/QtWidgets -I\/usr\/include\/qt\/QtGui -I\/usr\/include\/qt\/QtCore -I.$/;"	m
INSTALL_DIR	Makefile	/^INSTALL_DIR   = $(COPY_DIR)$/;"	m
INSTALL_FILE	Makefile	/^INSTALL_FILE  = install -m 644 -p$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = install -m 755 -p$/;"	m
KbPlot	h/kbplot.h	/^		KbPlot(GLWidget*);$/;"	p	class:KbPlot	access:public	signature:(GLWidget*)
KbPlot	h/kbplot.h	/^		KbPlot(GLWidget*, double xmin, double xmax, double ymin, double ymax);$/;"	p	class:KbPlot	access:public	signature:(GLWidget*, double xmin, double xmax, double ymin, double ymax)
KbPlot	h/kbplot.h	/^class KbPlot : IMouseEventListener {$/;"	c	inherits:IMouseEventListener
KbPlot	src/kbplot.cpp	/^KbPlot::KbPlot(GLWidget *_container, double _xmin, double _xmax, double _ymin, double _ymax){$/;"	f	class:KbPlot	signature:(GLWidget *_container, double _xmin, double _xmax, double _ymin, double _ymax)
KbPlot::KbPlot	h/kbplot.h	/^		KbPlot(GLWidget*);$/;"	p	class:KbPlot	access:public	signature:(GLWidget*)
KbPlot::KbPlot	h/kbplot.h	/^		KbPlot(GLWidget*, double xmin, double xmax, double ymin, double ymax);$/;"	p	class:KbPlot	access:public	signature:(GLWidget*, double xmin, double xmax, double ymin, double ymax)
KbPlot::KbPlot	src/kbplot.cpp	/^KbPlot::KbPlot(GLWidget *_container, double _xmin, double _xmax, double _ymin, double _ymax){$/;"	f	class:KbPlot	signature:(GLWidget *_container, double _xmin, double _xmax, double _ymin, double _ymax)
KbPlot::axisAdjustMin	h/kbplot.h	/^		double axisAdjustMin(double min, double tick);\/\/snap to powers of 10$/;"	p	class:KbPlot	access:private	signature:(double min, double tick)
KbPlot::axisAdjustMin	src/kbplot.cpp	/^double KbPlot::axisAdjustMin(double min, double tick){$/;"	f	class:KbPlot	signature:(double min, double tick)
KbPlot::axisRebuild	h/kbplot.h	/^		void axisRebuild(); \/\/build new ticks collections$/;"	p	class:KbPlot	access:private	signature:()
KbPlot::axisRebuild	src/kbplot.cpp	/^void KbPlot::axisRebuild(){$/;"	f	class:KbPlot	signature:()
KbPlot::c_frameThickness	h/kbplot.h	/^		static const double c_frameThickness = 0.02;$/;"	m	class:KbPlot	access:private
KbPlot::c_tickLength	h/kbplot.h	/^		static const double c_tickLength = 0.2;$/;"	m	class:KbPlot	access:private
KbPlot::container	h/kbplot.h	/^		GLWidget *container;$/;"	m	class:KbPlot	access:private
KbPlot::datasets	h/kbplot.h	/^		vector<const DataSet*> datasets;$/;"	m	class:KbPlot	access:private
KbPlot::draw	h/kbplot.h	/^		void draw(DataSet &ds, Style &s);$/;"	p	class:KbPlot	access:public	signature:(DataSet &ds, Style &s)
KbPlot::draw	src/kbplot.cpp	/^void KbPlot::draw(DataSet &ds, Style &s){$/;"	f	class:KbPlot	signature:(DataSet &ds, Style &s)
KbPlot::exportAsImage	h/kbplot.h	/^		void exportAsImage(const string filename);$/;"	p	class:KbPlot	access:public	signature:(const string filename)
KbPlot::frame	h/kbplot.h	/^		Polyline *frame;$/;"	m	class:KbPlot	access:private
KbPlot::framePoints	h/kbplot.h	/^		vector<Txy> framePoints;$/;"	m	class:KbPlot	access:private
KbPlot::gridRebuild	h/kbplot.h	/^		void gridRebuild(); \/\/build new ticks collections$/;"	p	class:KbPlot	access:private	signature:()
KbPlot::gridRebuild	src/kbplot.cpp	/^void KbPlot::gridRebuild(){$/;"	f	class:KbPlot	signature:()
KbPlot::mouseMoveEvent	h/kbplot.h	/^		virtual void mouseMoveEvent(int x,int y);$/;"	p	class:KbPlot	access:public	implementation:virtual	signature:(int x,int y)
KbPlot::mouseMoveEvent	src/kbplot.cpp	/^void KbPlot::mouseMoveEvent(int x, int y){$/;"	f	class:KbPlot	signature:(int x, int y)
KbPlot::mouseNewMovement	h/kbplot.h	/^		bool mouseNewMovement = true;$/;"	m	class:KbPlot	access:private
KbPlot::mousePressEvent	h/kbplot.h	/^		virtual void mousePressEvent(int x,int y);$/;"	p	class:KbPlot	access:public	implementation:virtual	signature:(int x,int y)
KbPlot::mousePressEvent	src/kbplot.cpp	/^void KbPlot::mousePressEvent(int x, int y){$/;"	f	class:KbPlot	signature:(int x, int y)
KbPlot::mouseReleaseEvent	h/kbplot.h	/^		virtual void mouseReleaseEvent(int x,int y);$/;"	p	class:KbPlot	access:public	implementation:virtual	signature:(int x,int y)
KbPlot::mouseReleaseEvent	src/kbplot.cpp	/^void KbPlot::mouseReleaseEvent(int,int){$/;"	f	class:KbPlot	signature:(int,int)
KbPlot::mouseScrollEvent	h/kbplot.h	/^		virtual void mouseScrollEvent(int angle);$/;"	p	class:KbPlot	access:public	implementation:virtual	signature:(int angle)
KbPlot::mouseScrollEvent	src/kbplot.cpp	/^void KbPlot::mouseScrollEvent(int a){$/;"	f	class:KbPlot	signature:(int a)
KbPlot::setAxisTick	h/kbplot.h	/^		void setAxisTick(double);$/;"	p	class:KbPlot	access:public	signature:(double)
KbPlot::setAxisXName	h/kbplot.h	/^		void setAxisXName(const string);$/;"	p	class:KbPlot	access:public	signature:(const string)
KbPlot::setAxisXTick	h/kbplot.h	/^		void setAxisXTick(double);$/;"	p	class:KbPlot	access:public	signature:(double)
KbPlot::setAxisYName	h/kbplot.h	/^		void setAxisYName(const string);$/;"	p	class:KbPlot	access:public	signature:(const string)
KbPlot::setAxisYTick	h/kbplot.h	/^		void setAxisYTick(double);$/;"	p	class:KbPlot	access:public	signature:(double)
KbPlot::setBackground	h/kbplot.h	/^		void setBackground(const string filename);$/;"	p	class:KbPlot	access:public	signature:(const string filename)
KbPlot::setBackground	h/kbplot.h	/^		void setBackground(const unsigned int color);$/;"	p	class:KbPlot	access:public	signature:(const unsigned int color)
KbPlot::setGridColor	h/kbplot.h	/^		void setGridColor(const unsigned int);$/;"	p	class:KbPlot	access:public	signature:(const unsigned int)
KbPlot::setGridStroke	h/kbplot.h	/^		void setGridStroke(const Style::LineStroke)  ;$/;"	p	class:KbPlot	access:public	signature:(const Style::LineStroke)
KbPlot::setGridThickness	h/kbplot.h	/^		void setGridThickness(const unsigned int);$/;"	p	class:KbPlot	access:public	signature:(const unsigned int)
KbPlot::setGridTick	h/kbplot.h	/^		void setGridTick(const int);$/;"	p	class:KbPlot	access:public	signature:(const int)
KbPlot::setGridXStroke	h/kbplot.h	/^		void setGridXStroke(const Style::LineStroke) ;$/;"	p	class:KbPlot	access:public	signature:(const Style::LineStroke)
KbPlot::setGridXTick	h/kbplot.h	/^		void setGridXTick(const int);$/;"	p	class:KbPlot	access:public	signature:(const int)
KbPlot::setGridYStroke	h/kbplot.h	/^		void setGridYStroke(const Style::LineStroke) ;$/;"	p	class:KbPlot	access:public	signature:(const Style::LineStroke)
KbPlot::setGridYTick	h/kbplot.h	/^		void setGridYTick(const int);$/;"	p	class:KbPlot	access:public	signature:(const int)
KbPlot::setRanges	h/kbplot.h	/^		void setRanges(double xmin, double xmax, double ymin, double ymax);$/;"	p	class:KbPlot	access:public	signature:(double xmin, double xmax, double ymin, double ymax)
KbPlot::setRanges	src/kbplot.cpp	/^void KbPlot::setRanges(double _xmin, double _xmax, double _ymin, double _ymax){$/;"	f	class:KbPlot	signature:(double _xmin, double _xmax, double _ymin, double _ymax)
KbPlot::stAxisX	h/kbplot.h	/^		Style stAxisX, stAxisY, stBkgnd, stGridX, stGridY;$/;"	m	class:KbPlot	access:private
KbPlot::stAxisY	h/kbplot.h	/^		Style stAxisX, stAxisY, stBkgnd, stGridX, stGridY;$/;"	m	class:KbPlot	access:private
KbPlot::stBkgnd	h/kbplot.h	/^		Style stAxisX, stAxisY, stBkgnd, stGridX, stGridY;$/;"	m	class:KbPlot	access:private
KbPlot::stGridX	h/kbplot.h	/^		Style stAxisX, stAxisY, stBkgnd, stGridX, stGridY;$/;"	m	class:KbPlot	access:private
KbPlot::stGridY	h/kbplot.h	/^		Style stAxisX, stAxisY, stBkgnd, stGridX, stGridY;$/;"	m	class:KbPlot	access:private
KbPlot::xgrid	h/kbplot.h	/^		std::vector<Line*> xgrid;$/;"	m	class:KbPlot	access:private
KbPlot::xgtick	h/kbplot.h	/^		double xgtick, ygtick;$/;"	m	class:KbPlot	access:private
KbPlot::xmax	h/kbplot.h	/^		double xmax, ymax, xmin, ymin;$/;"	m	class:KbPlot	access:private
KbPlot::xmin	h/kbplot.h	/^		double xmax, ymax, xmin, ymin;$/;"	m	class:KbPlot	access:private
KbPlot::xtick	h/kbplot.h	/^		double xtick, ytick;$/;"	m	class:KbPlot	access:private
KbPlot::xticks_b	h/kbplot.h	/^		std::vector<Line*> xticks_b;$/;"	m	class:KbPlot	access:private
KbPlot::xticks_t	h/kbplot.h	/^		std::vector<Line*> xticks_t;$/;"	m	class:KbPlot	access:private
KbPlot::ygrid	h/kbplot.h	/^		std::vector<Line*> ygrid;$/;"	m	class:KbPlot	access:private
KbPlot::ygtick	h/kbplot.h	/^		double xgtick, ygtick;$/;"	m	class:KbPlot	access:private
KbPlot::ymax	h/kbplot.h	/^		double xmax, ymax, xmin, ymin;$/;"	m	class:KbPlot	access:private
KbPlot::ymin	h/kbplot.h	/^		double xmax, ymax, xmin, ymin;$/;"	m	class:KbPlot	access:private
KbPlot::ytick	h/kbplot.h	/^		double xtick, ytick;$/;"	m	class:KbPlot	access:private
KbPlot::yticks_l	h/kbplot.h	/^		std::vector<Line*> yticks_l;$/;"	m	class:KbPlot	access:private
KbPlot::yticks_r	h/kbplot.h	/^		std::vector<Line*> yticks_r;$/;"	m	class:KbPlot	access:private
KbPlot::~KbPlot	h/kbplot.h	/^		~KbPlot();$/;"	p	class:KbPlot	access:public	signature:()
KbPlot::~KbPlot	src/kbplot.cpp	/^KbPlot::~KbPlot(){$/;"	f	class:KbPlot	signature:()
LFLAGS	Makefile	/^LFLAGS        = -Wl,-O1,--sort-common,--as-needed,-z,relro -Wl,-O1$/;"	m
LIBS	Makefile	/^LIBS          = $(SUBLIBS) -L.\/lib -ldrawtext -lGLU -lGLEW -lQt5OpenGL -lQt5Widgets -lQt5Gui -lQt5Core -lGL -lpthread $/;"	m
LINE_DASHED	h/graphical_object.h	/^		LINE_DASHED,$/;"	e	enum:Style::__anon1
LINE_DASH_DOTTED	h/graphical_object.h	/^		LINE_DASH_DOTTED$/;"	e	enum:Style::__anon1
LINE_DOTTED	h/graphical_object.h	/^		LINE_DOTTED,$/;"	e	enum:Style::__anon1
LINE_STD	h/graphical_object.h	/^		LINE_STD,$/;"	e	enum:Style::__anon1
LINK	Makefile	/^LINK          = g++$/;"	m
Line	h/graphical_object.h	/^		Line(double,double,double,double);$/;"	p	class:Line	access:public	signature:(double,double,double,double)
Line	h/graphical_object.h	/^class Line : public GraphicalObject {$/;"	c	inherits:GraphicalObject
Line	src/graphical_object.cpp	/^Line::Line(double _x1, double _y1, double _x2, double _y2): x1(_x1), x2(_x2), y1(_y1), y2(_y2) { } $/;"	f	class:Line	signature:(double _x1, double _y1, double _x2, double _y2)
Line::Line	h/graphical_object.h	/^		Line(double,double,double,double);$/;"	p	class:Line	access:public	signature:(double,double,double,double)
Line::Line	src/graphical_object.cpp	/^Line::Line(double _x1, double _y1, double _x2, double _y2): x1(_x1), x2(_x2), y1(_y1), y2(_y2) { } $/;"	f	class:Line	signature:(double _x1, double _y1, double _x2, double _y2)
Line::draw	h/graphical_object.h	/^		virtual void draw() const;$/;"	p	class:Line	access:public	implementation:virtual	signature:() const
Line::draw	src/graphical_object.cpp	/^void Line::draw() const {$/;"	f	class:Line	signature:() const
Line::setCoordinates	h/graphical_object.h	/^		void setCoordinates(double,double,double,double);$/;"	p	class:Line	access:public	signature:(double,double,double,double)
Line::setCoordinates	src/graphical_object.cpp	/^void Line::setCoordinates(double _x1, double _y1, double _x2, double _y2){$/;"	f	class:Line	signature:(double _x1, double _y1, double _x2, double _y2)
Line::x1	h/graphical_object.h	/^		double x1,x2,y1,y2;$/;"	m	class:Line	access:private
Line::x2	h/graphical_object.h	/^		double x1,x2,y1,y2;$/;"	m	class:Line	access:private
Line::y1	h/graphical_object.h	/^		double x1,x2,y1,y2;$/;"	m	class:Line	access:private
Line::y2	h/graphical_object.h	/^		double x1,x2,y1,y2;$/;"	m	class:Line	access:private
Line::~Line	h/graphical_object.h	/^		virtual ~Line(){};$/;"	f	class:Line	access:public	implementation:virtual	signature:()
LineStroke	h/graphical_object.h	/^	} LineStroke;$/;"	t	struct:Style	typeref:enum:Style::__anon1	access:public
MAKEFILE	Makefile	/^MAKEFILE      = Makefile$/;"	m
MARK_CROSS	h/graphical_object.h	/^		MARK_CROSS,$/;"	e	enum:Style::__anon2
MARK_DOT	h/graphical_object.h	/^		MARK_DOT,$/;"	e	enum:Style::__anon2
MARK_SQUARE	h/graphical_object.h	/^		MARK_SQUARE,$/;"	e	enum:Style::__anon2
MARK_TRIANGLE	h/graphical_object.h	/^		MARK_TRIANGLE$/;"	e	enum:Style::__anon2
MKDIR	Makefile	/^MKDIR         = mkdir -p$/;"	m
MOVE	Makefile	/^MOVE          = mv -f$/;"	m
MRK_TYPE_CROSS	h/graphical_object.h	/^	MRK_TYPE_CROSS$/;"	e	enum:__anon4
MRK_TYPE_DOT	h/graphical_object.h	/^	MRK_TYPE_DOT,$/;"	e	enum:__anon4
MarkerSet	h/graphical_object.h	/^		MarkerSet (vector<Txy> *data);$/;"	p	class:MarkerSet	access:public	signature:(vector<Txy> *data)
MarkerSet	h/graphical_object.h	/^class MarkerSet : public GraphicalObject {$/;"	c	inherits:GraphicalObject
MarkerSet	src/graphical_object.cpp	/^MarkerSet::MarkerSet(vector<Txy> *data){$/;"	f	class:MarkerSet	signature:(vector<Txy> *data)
MarkerSet::MarkerSet	h/graphical_object.h	/^		MarkerSet (vector<Txy> *data);$/;"	p	class:MarkerSet	access:public	signature:(vector<Txy> *data)
MarkerSet::MarkerSet	src/graphical_object.cpp	/^MarkerSet::MarkerSet(vector<Txy> *data){$/;"	f	class:MarkerSet	signature:(vector<Txy> *data)
MarkerSet::data	h/graphical_object.h	/^		vector<Txy> *data;$/;"	m	class:MarkerSet	access:private
MarkerSet::draw	h/graphical_object.h	/^		virtual void draw() const;$/;"	p	class:MarkerSet	access:public	implementation:virtual	signature:() const
MarkerSet::draw	src/graphical_object.cpp	/^void MarkerSet::draw() const{$/;"	f	class:MarkerSet	signature:() const
MarkerSet::~MarkerSet	h/graphical_object.h	/^		virtual ~MarkerSet (){};$/;"	f	class:MarkerSet	access:public	implementation:virtual	signature:()
MarkerType	h/graphical_object.h	/^	} MarkerType;$/;"	t	struct:Style	typeref:enum:Style::__anon2	access:public
MarkerType	h/graphical_object.h	/^} MarkerType;$/;"	t	typeref:enum:__anon4
OBJECTS	Makefile	/^OBJECTS       = glwidget.o \\$/;"	m
OBJECTS_DIR	Makefile	/^OBJECTS_DIR   = .\/$/;"	m
Polygon	h/graphical_object.h	/^		Polygon(vector<Txy> *);$/;"	p	class:Polygon	access:public	signature:(vector<Txy> *)
Polygon	h/graphical_object.h	/^class Polygon : public GraphicalObject {$/;"	c	inherits:GraphicalObject
Polygon	src/graphical_object.cpp	/^Polygon::Polygon(vector<Txy> *d){$/;"	f	class:Polygon	signature:(vector<Txy> *d)
Polygon::Polygon	h/graphical_object.h	/^		Polygon(vector<Txy> *);$/;"	p	class:Polygon	access:public	signature:(vector<Txy> *)
Polygon::Polygon	src/graphical_object.cpp	/^Polygon::Polygon(vector<Txy> *d){$/;"	f	class:Polygon	signature:(vector<Txy> *d)
Polygon::data	h/graphical_object.h	/^		vector<Txy> *data;$/;"	m	class:Polygon	access:private
Polygon::draw	h/graphical_object.h	/^		virtual void draw() const;$/;"	p	class:Polygon	access:public	implementation:virtual	signature:() const
Polygon::draw	src/graphical_object.cpp	/^void Polygon::draw()const{$/;"	f	class:Polygon	signature:() const
Polygon::~Polygon	h/graphical_object.h	/^		virtual ~Polygon(){};$/;"	f	class:Polygon	access:public	implementation:virtual	signature:()
Polyline	h/graphical_object.h	/^		Polyline(vector<Txy> *data);$/;"	p	class:Polyline	access:public	signature:(vector<Txy> *data)
Polyline	h/graphical_object.h	/^class Polyline : public GraphicalObject {$/;"	c	inherits:GraphicalObject
Polyline	src/graphical_object.cpp	/^Polyline::Polyline(std::vector<Txy> *data){$/;"	f	class:Polyline	signature:(std::vector<Txy> *data)
Polyline::Polyline	h/graphical_object.h	/^		Polyline(vector<Txy> *data);$/;"	p	class:Polyline	access:public	signature:(vector<Txy> *data)
Polyline::Polyline	src/graphical_object.cpp	/^Polyline::Polyline(std::vector<Txy> *data){$/;"	f	class:Polyline	signature:(std::vector<Txy> *data)
Polyline::data	h/graphical_object.h	/^		vector<Txy> *data;$/;"	m	class:Polyline	access:private
Polyline::draw	h/graphical_object.h	/^		virtual void draw() const;$/;"	p	class:Polyline	access:public	implementation:virtual	signature:() const
Polyline::draw	src/graphical_object.cpp	/^void Polyline::draw() const{$/;"	f	class:Polyline	signature:() const
Polyline::~Polyline	h/graphical_object.h	/^		virtual ~Polyline(){qDebug() << "Destroying polyline";};$/;"	f	class:Polyline	access:public	implementation:virtual	signature:()
QMAKE	Makefile	/^QMAKE         = \/usr\/lib\/qt\/bin\/qmake$/;"	m
QMAKE_TARGET	Makefile	/^QMAKE_TARGET  = kbplot$/;"	m
QT_MOC_LITERAL	moc_glwidget.cpp	25;"	d	file:
QT_MOC_LITERAL	moc_glwidget.cpp	36;"	d	file:
RANLIB	Makefile	/^RANLIB        = $/;"	m
RawData	h/kbplot.h	/^class RawData{$/;"	c
RawData::DataType	h/kbplot.h	/^	} DataType; $/;"	t	class:RawData	typeref:enum:RawData::__anon5	access:private
RawData::TYPE_DOUBLE	h/kbplot.h	/^		TYPE_DOUBLE,$/;"	e	enum:RawData::__anon5
RawData::TYPE_FLOAT	h/kbplot.h	/^		TYPE_FLOAT,$/;"	e	enum:RawData::__anon5
RawData::TYPE_INT1	h/kbplot.h	/^		TYPE_INT1,$/;"	e	enum:RawData::__anon5
RawData::TYPE_INT16	h/kbplot.h	/^		TYPE_INT16$/;"	e	enum:RawData::__anon5
RawData::TYPE_INT4	h/kbplot.h	/^		TYPE_INT4,$/;"	e	enum:RawData::__anon5
RawData::TYPE_INT8	h/kbplot.h	/^		TYPE_INT8,$/;"	e	enum:RawData::__anon5
RawData::get	h/kbplot.h	/^	static vector<Txy> *get(void *data, size_t count, size_t item_length, size_t o_x, size_t o_y, DataType t);$/;"	p	class:RawData	access:public	signature:(void *data, size_t count, size_t item_length, size_t o_x, size_t o_y, DataType t)
RawData::get	src/kbplot.cpp	/^vector<Txy>* RawData::get(void *data, size_t count, size_t item_length, size_t o_x, size_t o_y, DataType t){$/;"	f	class:RawData	signature:(void *data, size_t count, size_t item_length, size_t o_x, size_t o_y, DataType t)
SED	Makefile	/^SED           = sed$/;"	m
SOURCES	Makefile	/^SOURCES       = src\/glwidget.cpp \\$/;"	m
STRIP	Makefile	/^STRIP         = strip$/;"	m
SYMLINK	Makefile	/^SYMLINK       = ln -f -s$/;"	m
Style	h/graphical_object.h	/^	Style();$/;"	p	struct:Style	access:public	signature:()
Style	h/graphical_object.h	/^struct Style {$/;"	s
Style	src/graphical_object.cpp	/^Style::Style(){$/;"	f	class:Style	signature:()
Style::LINE_DASHED	h/graphical_object.h	/^		LINE_DASHED,$/;"	e	enum:Style::__anon1
Style::LINE_DASH_DOTTED	h/graphical_object.h	/^		LINE_DASH_DOTTED$/;"	e	enum:Style::__anon1
Style::LINE_DOTTED	h/graphical_object.h	/^		LINE_DOTTED,$/;"	e	enum:Style::__anon1
Style::LINE_STD	h/graphical_object.h	/^		LINE_STD,$/;"	e	enum:Style::__anon1
Style::LineStroke	h/graphical_object.h	/^	} LineStroke;$/;"	t	struct:Style	typeref:enum:Style::__anon1	access:public
Style::MARK_CROSS	h/graphical_object.h	/^		MARK_CROSS,$/;"	e	enum:Style::__anon2
Style::MARK_DOT	h/graphical_object.h	/^		MARK_DOT,$/;"	e	enum:Style::__anon2
Style::MARK_SQUARE	h/graphical_object.h	/^		MARK_SQUARE,$/;"	e	enum:Style::__anon2
Style::MARK_TRIANGLE	h/graphical_object.h	/^		MARK_TRIANGLE$/;"	e	enum:Style::__anon2
Style::MarkerType	h/graphical_object.h	/^	} MarkerType;$/;"	t	struct:Style	typeref:enum:Style::__anon2	access:public
Style::Style	h/graphical_object.h	/^	Style();$/;"	p	struct:Style	access:public	signature:()
Style::Style	src/graphical_object.cpp	/^Style::Style(){$/;"	f	class:Style	signature:()
Style::TEXT_ALIGN_BOTLEFT	h/graphical_object.h	/^		TEXT_ALIGN_BOTLEFT,$/;"	e	enum:Style::__anon3
Style::TEXT_ALIGN_BOTRIGHT	h/graphical_object.h	/^		TEXT_ALIGN_BOTRIGHT$/;"	e	enum:Style::__anon3
Style::TEXT_ALIGN_BOTTOM	h/graphical_object.h	/^		TEXT_ALIGN_BOTTOM,$/;"	e	enum:Style::__anon3
Style::TEXT_ALIGN_CENTER	h/graphical_object.h	/^		TEXT_ALIGN_CENTER,$/;"	e	enum:Style::__anon3
Style::TEXT_ALIGN_LEFT	h/graphical_object.h	/^		TEXT_ALIGN_LEFT,$/;"	e	enum:Style::__anon3
Style::TEXT_ALIGN_RIGHT	h/graphical_object.h	/^		TEXT_ALIGN_RIGHT,$/;"	e	enum:Style::__anon3
Style::TEXT_ALIGN_TOP	h/graphical_object.h	/^		TEXT_ALIGN_TOP,$/;"	e	enum:Style::__anon3
Style::TEXT_ALIGN_TOPLEFT	h/graphical_object.h	/^		TEXT_ALIGN_TOPLEFT,$/;"	e	enum:Style::__anon3
Style::TEXT_ALIGN_TOPRIGHT	h/graphical_object.h	/^		TEXT_ALIGN_TOPRIGHT,$/;"	e	enum:Style::__anon3
Style::TextAlignment	h/graphical_object.h	/^	} TextAlignment;$/;"	t	struct:Style	typeref:enum:Style::__anon3	access:public
Style::fontName	h/graphical_object.h	/^	string fontName = "Ubuntu-R.ttf";$/;"	m	struct:Style	access:public
Style::fontSize	h/graphical_object.h	/^	size_t fontSize = 16;$/;"	m	struct:Style	access:public
Style::lineColor	h/graphical_object.h	/^	unsigned int lineColor = 0xFFFFFFFF;$/;"	m	struct:Style	access:public
Style::lineStroke	h/graphical_object.h	/^	LineStroke lineStroke = LINE_STD;$/;"	m	struct:Style	access:public
Style::lineThickness	h/graphical_object.h	/^	float lineThickness = 1.0;$/;"	m	struct:Style	access:public
Style::markerColor	h/graphical_object.h	/^	unsigned int markerColor = 0xFFFFFFFF;$/;"	m	struct:Style	access:public
Style::markerSize	h/graphical_object.h	/^	unsigned int markerSize = 5;$/;"	m	struct:Style	access:public
Style::markerType	h/graphical_object.h	/^	MarkerType markerType = MARK_CROSS;$/;"	m	struct:Style	access:public
Style::textAlignment	h/graphical_object.h	/^	TextAlignment textAlignment = TEXT_ALIGN_CENTER;$/;"	m	struct:Style	access:public
Style::textColor	h/graphical_object.h	/^	unsigned int textColor = 0xFFFFFFFF;$/;"	m	struct:Style	access:public
TAR	Makefile	/^TAR           = tar -cf$/;"	m
TARGET	Makefile	/^TARGET        = bin\/kbplot$/;"	m
TEXT_ALIGN_BOTLEFT	h/graphical_object.h	/^		TEXT_ALIGN_BOTLEFT,$/;"	e	enum:Style::__anon3
TEXT_ALIGN_BOTRIGHT	h/graphical_object.h	/^		TEXT_ALIGN_BOTRIGHT$/;"	e	enum:Style::__anon3
TEXT_ALIGN_BOTTOM	h/graphical_object.h	/^		TEXT_ALIGN_BOTTOM,$/;"	e	enum:Style::__anon3
TEXT_ALIGN_CENTER	h/graphical_object.h	/^		TEXT_ALIGN_CENTER,$/;"	e	enum:Style::__anon3
TEXT_ALIGN_LEFT	h/graphical_object.h	/^		TEXT_ALIGN_LEFT,$/;"	e	enum:Style::__anon3
TEXT_ALIGN_RIGHT	h/graphical_object.h	/^		TEXT_ALIGN_RIGHT,$/;"	e	enum:Style::__anon3
TEXT_ALIGN_TOP	h/graphical_object.h	/^		TEXT_ALIGN_TOP,$/;"	e	enum:Style::__anon3
TEXT_ALIGN_TOPLEFT	h/graphical_object.h	/^		TEXT_ALIGN_TOPLEFT,$/;"	e	enum:Style::__anon3
TEXT_ALIGN_TOPRIGHT	h/graphical_object.h	/^		TEXT_ALIGN_TOPRIGHT,$/;"	e	enum:Style::__anon3
TXY_H	h/txy.h	2;"	d
TYPE_DOUBLE	h/kbplot.h	/^		TYPE_DOUBLE,$/;"	e	enum:RawData::__anon5
TYPE_FLOAT	h/kbplot.h	/^		TYPE_FLOAT,$/;"	e	enum:RawData::__anon5
TYPE_INT1	h/kbplot.h	/^		TYPE_INT1,$/;"	e	enum:RawData::__anon5
TYPE_INT16	h/kbplot.h	/^		TYPE_INT16$/;"	e	enum:RawData::__anon5
TYPE_INT4	h/kbplot.h	/^		TYPE_INT4,$/;"	e	enum:RawData::__anon5
TYPE_INT8	h/kbplot.h	/^		TYPE_INT8,$/;"	e	enum:RawData::__anon5
Text	h/graphical_object.h	/^		Text(const string &text, size_t size, double x, double y);$/;"	p	class:Text	access:public	signature:(const string &text, size_t size, double x, double y)
Text	h/graphical_object.h	/^class Text : public GraphicalObject {$/;"	c	inherits:GraphicalObject
Text	src/graphical_object.cpp	/^Text::Text(const string &text, size_t size, double x, double y){$/;"	f	class:Text	signature:(const string &text, size_t size, double x, double y)
Text::Text	h/graphical_object.h	/^		Text(const string &text, size_t size, double x, double y);$/;"	p	class:Text	access:public	signature:(const string &text, size_t size, double x, double y)
Text::Text	src/graphical_object.cpp	/^Text::Text(const string &text, size_t size, double x, double y){$/;"	f	class:Text	signature:(const string &text, size_t size, double x, double y)
Text::draw	h/graphical_object.h	/^		virtual void draw()const;$/;"	p	class:Text	access:public	implementation:virtual	signature:() const
Text::draw	src/graphical_object.cpp	/^void Text::draw()const{$/;"	f	class:Text	signature:() const
Text::font	h/graphical_object.h	/^		struct dtx_font *font;$/;"	m	class:Text	typeref:struct:Text::dtx_font	access:private
Text::size	h/graphical_object.h	/^		size_t size;$/;"	m	class:Text	access:private
Text::text	h/graphical_object.h	/^		string text;$/;"	m	class:Text	access:private
Text::x	h/graphical_object.h	/^		double x, y;$/;"	m	class:Text	access:private
Text::y	h/graphical_object.h	/^		double x, y;$/;"	m	class:Text	access:private
Text::~Text	h/graphical_object.h	/^		~Text(){};$/;"	f	class:Text	access:public	signature:()
TextAlignment	h/graphical_object.h	/^	} TextAlignment;$/;"	t	struct:Style	typeref:enum:Style::__anon3	access:public
Txy	h/txy.h	/^	Txy(double _x, double _y){x = _x; y = _y;}$/;"	f	struct:Txy	access:public	signature:(double _x, double _y)
Txy	h/txy.h	/^struct Txy $/;"	s
Txy::Txy	h/txy.h	/^	Txy(double _x, double _y){x = _x; y = _y;}$/;"	f	struct:Txy	access:public	signature:(double _x, double _y)
Txy::x	h/txy.h	/^	double x,y;$/;"	m	struct:Txy	access:public
Txy::y	h/txy.h	/^	double x,y;$/;"	m	struct:Txy	access:public
UTILITIES_H	h/utilities.h	2;"	d
addObject	h/aglwidget.h	/^	virtual void addObject(string, GraphicalObject*)=0;$/;"	p	class:AGLWidget	access:public	implementation:pure virtual	signature:(string, GraphicalObject*)
addObject	h/glwidget.h	/^	virtual void addObject(string, GraphicalObject*);$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:(string, GraphicalObject*)
addObject	src/glwidget.cpp	/^void GLWidget::addObject(string key, GraphicalObject *p){$/;"	f	class:GLWidget	signature:(string key, GraphicalObject *p)
after_draw	h/graphical_object.h	/^		void after_draw()const;$/;"	p	class:GraphicalObject	access:protected	signature:() const
after_draw	src/graphical_object.cpp	/^void GraphicalObject::after_draw()const{$/;"	f	class:GraphicalObject	signature:() const
axisAdjustMin	h/kbplot.h	/^		double axisAdjustMin(double min, double tick);\/\/snap to powers of 10$/;"	p	class:KbPlot	access:private	signature:(double min, double tick)
axisAdjustMin	src/kbplot.cpp	/^double KbPlot::axisAdjustMin(double min, double tick){$/;"	f	class:KbPlot	signature:(double min, double tick)
axisRebuild	h/kbplot.h	/^		void axisRebuild(); \/\/build new ticks collections$/;"	p	class:KbPlot	access:private	signature:()
axisRebuild	src/kbplot.cpp	/^void KbPlot::axisRebuild(){$/;"	f	class:KbPlot	signature:()
before_draw	h/graphical_object.h	/^		void before_draw()const;$/;"	p	class:GraphicalObject	access:protected	signature:() const
before_draw	src/graphical_object.cpp	/^void GraphicalObject::before_draw()const{$/;"	f	class:GraphicalObject	signature:() const
c_frameThickness	h/kbplot.h	/^		static const double c_frameThickness = 0.02;$/;"	m	class:KbPlot	access:private
c_tickLength	h/kbplot.h	/^		static const double c_tickLength = 0.2;$/;"	m	class:KbPlot	access:private
clearScene	h/aglwidget.h	/^	virtual void clearScene()=0;$/;"	p	class:AGLWidget	access:public	implementation:pure virtual	signature:()
clearScene	h/glwidget.h	/^	virtual void clearScene();$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:()
clearScene	src/glwidget.cpp	/^void GLWidget::clearScene(){$/;"	f	class:GLWidget	signature:()
container	h/kbplot.h	/^		GLWidget *container;$/;"	m	class:KbPlot	access:private
data	h/graphical_object.h	/^		vector<Txy> *data;$/;"	m	class:MarkerSet	access:private
data	h/graphical_object.h	/^		vector<Txy> *data;$/;"	m	class:Polygon	access:private
data	h/graphical_object.h	/^		vector<Txy> *data;$/;"	m	class:Polyline	access:private
data	h/kbplot.h	/^		vector<Txy> *data;$/;"	m	struct:DataSet	access:private
data	moc_glwidget.cpp	/^    QByteArrayData data[1];$/;"	m	struct:qt_meta_stringdata_GLWidget_t	file:	access:public
datasets	h/kbplot.h	/^		vector<const DataSet*> datasets;$/;"	m	class:KbPlot	access:private
draw	h/graphical_object.h	/^		virtual void draw() const = 0;$/;"	p	class:GraphicalObject	access:public	implementation:pure virtual	signature:() const
draw	h/graphical_object.h	/^		virtual void draw() const;$/;"	p	class:Line	access:public	implementation:virtual	signature:() const
draw	h/graphical_object.h	/^		virtual void draw() const;$/;"	p	class:MarkerSet	access:public	implementation:virtual	signature:() const
draw	h/graphical_object.h	/^		virtual void draw() const;$/;"	p	class:Polygon	access:public	implementation:virtual	signature:() const
draw	h/graphical_object.h	/^		virtual void draw() const;$/;"	p	class:Polyline	access:public	implementation:virtual	signature:() const
draw	h/graphical_object.h	/^		virtual void draw()const;$/;"	p	class:Text	access:public	implementation:virtual	signature:() const
draw	h/kbplot.h	/^		void draw(DataSet &ds, Style &s);$/;"	p	class:KbPlot	access:public	signature:(DataSet &ds, Style &s)
draw	src/graphical_object.cpp	/^void Line::draw() const {$/;"	f	class:Line	signature:() const
draw	src/graphical_object.cpp	/^void MarkerSet::draw() const{$/;"	f	class:MarkerSet	signature:() const
draw	src/graphical_object.cpp	/^void Polygon::draw()const{$/;"	f	class:Polygon	signature:() const
draw	src/graphical_object.cpp	/^void Polyline::draw() const{$/;"	f	class:Polyline	signature:() const
draw	src/graphical_object.cpp	/^void Text::draw()const{$/;"	f	class:Text	signature:() const
draw	src/kbplot.cpp	/^void KbPlot::draw(DataSet &ds, Style &s){$/;"	f	class:KbPlot	signature:(DataSet &ds, Style &s)
exportAsImage	h/kbplot.h	/^		void exportAsImage(const string filename);$/;"	p	class:KbPlot	access:public	signature:(const string filename)
font	h/graphical_object.h	/^		struct dtx_font *font;$/;"	m	class:Text	typeref:struct:Text::dtx_font	access:private
fontName	h/graphical_object.h	/^	string fontName = "Ubuntu-R.ttf";$/;"	m	struct:Style	access:public
fontSize	h/graphical_object.h	/^	size_t fontSize = 16;$/;"	m	struct:Style	access:public
frame	h/kbplot.h	/^		Polyline *frame;$/;"	m	class:KbPlot	access:private
framePoints	h/kbplot.h	/^		vector<Txy> framePoints;$/;"	m	class:KbPlot	access:private
get	h/kbplot.h	/^	static vector<Txy> *get(void *data, size_t count, size_t item_length, size_t o_x, size_t o_y, DataType t);$/;"	p	class:RawData	access:public	signature:(void *data, size_t count, size_t item_length, size_t o_x, size_t o_y, DataType t)
get	src/kbplot.cpp	/^vector<Txy>* RawData::get(void *data, size_t count, size_t item_length, size_t o_x, size_t o_y, DataType t){$/;"	f	class:RawData	signature:(void *data, size_t count, size_t item_length, size_t o_x, size_t o_y, DataType t)
getData	h/kbplot.h	/^		vector<Txy> *getData()const;$/;"	p	struct:DataSet	access:public	signature:() const
getData	src/kbplot.cpp	/^vector<Txy> * DataSet::getData()const{$/;"	f	class:DataSet	signature:() const
gridRebuild	h/kbplot.h	/^		void gridRebuild(); \/\/build new ticks collections$/;"	p	class:KbPlot	access:private	signature:()
gridRebuild	src/kbplot.cpp	/^void KbPlot::gridRebuild(){$/;"	f	class:KbPlot	signature:()
initializeGL	h/glwidget.h	/^	void initializeGL();$/;"	p	class:GLWidget	access:public	signature:()
initializeGL	src/glwidget.cpp	/^void GLWidget::initializeGL() {$/;"	f	class:GLWidget	signature:()
isFixed	h/graphical_object.h	/^		bool isFixed= false;$/;"	m	class:GraphicalObject	access:protected
isScaled	h/graphical_object.h	/^		bool isScaled = false;$/;"	m	class:GraphicalObject	access:protected
isTranslated	h/graphical_object.h	/^		bool isTranslated = false;$/;"	m	class:GraphicalObject	access:protected
lineColor	h/graphical_object.h	/^	unsigned int lineColor = 0xFFFFFFFF;$/;"	m	struct:Style	access:public
lineStroke	h/graphical_object.h	/^	LineStroke lineStroke = LINE_STD;$/;"	m	struct:Style	access:public
lineThickness	h/graphical_object.h	/^	float lineThickness = 1.0;$/;"	m	struct:Style	access:public
main	src/main.cpp	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
markerColor	h/graphical_object.h	/^	unsigned int markerColor = 0xFFFFFFFF;$/;"	m	struct:Style	access:public
markerSize	h/graphical_object.h	/^	unsigned int markerSize = 5;$/;"	m	struct:Style	access:public
markerTexes	h/graphical_object.h	/^const GLubyte markerTexes[][64] ={{$/;"	v
markerType	h/graphical_object.h	/^	MarkerType markerType = MARK_CROSS;$/;"	m	struct:Style	access:public
maska	src/graphical_object.cpp	/^const unsigned int maska = 0x000000FF;$/;"	v
maskb	src/graphical_object.cpp	/^const unsigned int maskb = 0x0000FF00;$/;"	v
maskg	src/graphical_object.cpp	/^const unsigned int maskg = 0x00FF0000;$/;"	v
maskr	src/graphical_object.cpp	/^const unsigned int maskr = 0xFF000000;$/;"	v
metaObject	moc_glwidget.cpp	/^const QMetaObject *GLWidget::metaObject() const$/;"	f	class:GLWidget	signature:() const
mouseListeners	h/glwidget.h	/^	vector<IMouseEventListener*> mouseListeners;$/;"	m	class:GLWidget	access:private
mouseMoveEvent	h/event.h	/^	virtual void mouseMoveEvent(int,int)=0;$/;"	p	class:IMouseEventListener	access:public	implementation:pure virtual	signature:(int,int)
mouseMoveEvent	h/glwidget.h	/^	void mouseMoveEvent(QMouseEvent *e);$/;"	p	class:GLWidget	access:public	signature:(QMouseEvent *e)
mouseMoveEvent	h/kbplot.h	/^		virtual void mouseMoveEvent(int x,int y);$/;"	p	class:KbPlot	access:public	implementation:virtual	signature:(int x,int y)
mouseMoveEvent	src/glwidget.cpp	/^void GLWidget::mouseMoveEvent(QMouseEvent *e){$/;"	f	class:GLWidget	signature:(QMouseEvent *e)
mouseMoveEvent	src/kbplot.cpp	/^void KbPlot::mouseMoveEvent(int x, int y){$/;"	f	class:KbPlot	signature:(int x, int y)
mouseNewMovement	h/kbplot.h	/^		bool mouseNewMovement = true;$/;"	m	class:KbPlot	access:private
mousePressEvent	h/event.h	/^	virtual void mousePressEvent(int,int)=0;$/;"	p	class:IMouseEventListener	access:public	implementation:pure virtual	signature:(int,int)
mousePressEvent	h/glwidget.h	/^	void mousePressEvent(QMouseEvent *e);$/;"	p	class:GLWidget	access:public	signature:(QMouseEvent *e)
mousePressEvent	h/kbplot.h	/^		virtual void mousePressEvent(int x,int y);$/;"	p	class:KbPlot	access:public	implementation:virtual	signature:(int x,int y)
mousePressEvent	src/glwidget.cpp	/^void GLWidget::mousePressEvent(QMouseEvent *e){$/;"	f	class:GLWidget	signature:(QMouseEvent *e)
mousePressEvent	src/kbplot.cpp	/^void KbPlot::mousePressEvent(int x, int y){$/;"	f	class:KbPlot	signature:(int x, int y)
mouseReleaseEvent	h/event.h	/^	virtual void mouseReleaseEvent(int,int)=0;$/;"	p	class:IMouseEventListener	access:public	implementation:pure virtual	signature:(int,int)
mouseReleaseEvent	h/glwidget.h	/^	void mouseReleaseEvent(QMouseEvent *e);$/;"	p	class:GLWidget	access:public	signature:(QMouseEvent *e)
mouseReleaseEvent	h/kbplot.h	/^		virtual void mouseReleaseEvent(int x,int y);$/;"	p	class:KbPlot	access:public	implementation:virtual	signature:(int x,int y)
mouseReleaseEvent	src/glwidget.cpp	/^void GLWidget::mouseReleaseEvent(QMouseEvent *e){$/;"	f	class:GLWidget	signature:(QMouseEvent *e)
mouseReleaseEvent	src/kbplot.cpp	/^void KbPlot::mouseReleaseEvent(int,int){$/;"	f	class:KbPlot	signature:(int,int)
mouseScrollEvent	h/event.h	/^	virtual void mouseScrollEvent(int)=0;$/;"	p	class:IMouseEventListener	access:public	implementation:pure virtual	signature:(int)
mouseScrollEvent	h/kbplot.h	/^		virtual void mouseScrollEvent(int angle);$/;"	p	class:KbPlot	access:public	implementation:virtual	signature:(int angle)
mouseScrollEvent	src/kbplot.cpp	/^void KbPlot::mouseScrollEvent(int a){$/;"	f	class:KbPlot	signature:(int a)
mouseX	h/glwidget.h	/^	int mouseX, mouseY;$/;"	m	class:GLWidget	access:private
mouseY	h/glwidget.h	/^	int mouseX, mouseY;$/;"	m	class:GLWidget	access:private
myglPlaneWH	h/utilities.h	/^Txy myglPlaneWH();\/\/Получить размеры видимой плоскости (ширина, высота)$/;"	p	signature:()
myglPlaneWH	src/utilities.cpp	/^Txy myglPlaneWH(){$/;"	f	signature:()
myglScreenWH	h/utilities.h	/^Txy myglScreenWH();\/\/Получить размеры экрана(ш,в)$/;"	p	signature:()
myglScreenWH	src/utilities.cpp	/^Txy myglScreenWH(){$/;"	f	signature:()
myglTrObjectScreen	h/utilities.h	/^Txy myglTrObjectScreen(double x, double y); \/\/Математику в координаты экрана$/;"	p	signature:(double x, double y)
myglTrObjectScreen	src/utilities.cpp	/^Txy myglTrObjectScreen(double x,double y){$/;"	f	signature:(double x,double y)
myglTrScreenObject	h/utilities.h	/^Txy myglTrScreenObject(double x, double y); \/\/К-ы экрана в математику$/;"	p	signature:(double x, double y)
myglTrScreenObject	src/utilities.cpp	/^Txy myglTrScreenObject(double x, double y){$/;"	f	signature:(double x, double y)
objects	h/glwidget.h	/^	map<string, GraphicalObject*> objects;$/;"	m	class:GLWidget	access:private
paintGL	h/glwidget.h	/^	void paintGL();$/;"	p	class:GLWidget	access:public	signature:()
paintGL	src/glwidget.cpp	/^void GLWidget::paintGL(){$/;"	f	class:GLWidget	signature:()
qt_meta_data_GLWidget	moc_glwidget.cpp	/^static const uint qt_meta_data_GLWidget[] = {$/;"	v	file:
qt_meta_stringdata_GLWidget	moc_glwidget.cpp	/^static const qt_meta_stringdata_GLWidget_t qt_meta_stringdata_GLWidget = {$/;"	v	file:
qt_meta_stringdata_GLWidget_t	moc_glwidget.cpp	/^struct qt_meta_stringdata_GLWidget_t {$/;"	s	file:
qt_meta_stringdata_GLWidget_t::data	moc_glwidget.cpp	/^    QByteArrayData data[1];$/;"	m	struct:qt_meta_stringdata_GLWidget_t	file:	access:public
qt_meta_stringdata_GLWidget_t::stringdata	moc_glwidget.cpp	/^    char stringdata[10];$/;"	m	struct:qt_meta_stringdata_GLWidget_t	file:	access:public
qt_metacall	moc_glwidget.cpp	/^int GLWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GLWidget	signature:(QMetaObject::Call _c, int _id, void **_a)
qt_metacast	moc_glwidget.cpp	/^void *GLWidget::qt_metacast(const char *_clname)$/;"	f	class:GLWidget	signature:(const char *_clname)
qt_static_metacall	moc_glwidget.cpp	/^void GLWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GLWidget	signature:(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
removeAt	h/glwidget.h	/^	virtual void removeAt(int);$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:(int)
removeAt	src/glwidget.cpp	/^void GLWidget::removeAt(int){$/;"	f	class:GLWidget	signature:(int)
removeWithPrefix	h/glwidget.h	/^	virtual void removeWithPrefix(string);$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:(string)
removeWithPrefix	src/glwidget.cpp	/^void GLWidget::removeWithPrefix(string key){$/;"	f	class:GLWidget	signature:(string key)
resizeGL	h/glwidget.h	/^	void resizeGL(int nw, int nh);$/;"	p	class:GLWidget	access:public	signature:(int nw, int nh)
resizeGL	src/glwidget.cpp	/^void GLWidget::resizeGL(int nw, int nh){$/;"	f	class:GLWidget	signature:(int nw, int nh)
scX	h/graphical_object.h	/^		double scX, scY;$/;"	m	class:GraphicalObject	access:protected
scY	h/graphical_object.h	/^		double scX, scY;$/;"	m	class:GraphicalObject	access:protected
setAxisTick	h/kbplot.h	/^		void setAxisTick(double);$/;"	p	class:KbPlot	access:public	signature:(double)
setAxisXName	h/kbplot.h	/^		void setAxisXName(const string);$/;"	p	class:KbPlot	access:public	signature:(const string)
setAxisXTick	h/kbplot.h	/^		void setAxisXTick(double);$/;"	p	class:KbPlot	access:public	signature:(double)
setAxisYName	h/kbplot.h	/^		void setAxisYName(const string);$/;"	p	class:KbPlot	access:public	signature:(const string)
setAxisYTick	h/kbplot.h	/^		void setAxisYTick(double);$/;"	p	class:KbPlot	access:public	signature:(double)
setBackground	h/kbplot.h	/^		void setBackground(const string filename);$/;"	p	class:KbPlot	access:public	signature:(const string filename)
setBackground	h/kbplot.h	/^		void setBackground(const unsigned int color);$/;"	p	class:KbPlot	access:public	signature:(const unsigned int color)
setCoordinates	h/graphical_object.h	/^		void setCoordinates(double,double,double,double);$/;"	p	class:Line	access:public	signature:(double,double,double,double)
setCoordinates	src/graphical_object.cpp	/^void Line::setCoordinates(double _x1, double _y1, double _x2, double _y2){$/;"	f	class:Line	signature:(double _x1, double _y1, double _x2, double _y2)
setGridColor	h/kbplot.h	/^		void setGridColor(const unsigned int);$/;"	p	class:KbPlot	access:public	signature:(const unsigned int)
setGridStroke	h/kbplot.h	/^		void setGridStroke(const Style::LineStroke)  ;$/;"	p	class:KbPlot	access:public	signature:(const Style::LineStroke)
setGridThickness	h/kbplot.h	/^		void setGridThickness(const unsigned int);$/;"	p	class:KbPlot	access:public	signature:(const unsigned int)
setGridTick	h/kbplot.h	/^		void setGridTick(const int);$/;"	p	class:KbPlot	access:public	signature:(const int)
setGridXStroke	h/kbplot.h	/^		void setGridXStroke(const Style::LineStroke) ;$/;"	p	class:KbPlot	access:public	signature:(const Style::LineStroke)
setGridXTick	h/kbplot.h	/^		void setGridXTick(const int);$/;"	p	class:KbPlot	access:public	signature:(const int)
setGridYStroke	h/kbplot.h	/^		void setGridYStroke(const Style::LineStroke) ;$/;"	p	class:KbPlot	access:public	signature:(const Style::LineStroke)
setGridYTick	h/kbplot.h	/^		void setGridYTick(const int);$/;"	p	class:KbPlot	access:public	signature:(const int)
setRanges	h/kbplot.h	/^		void setRanges(double xmin, double xmax, double ymin, double ymax);$/;"	p	class:KbPlot	access:public	signature:(double xmin, double xmax, double ymin, double ymax)
setRanges	src/kbplot.cpp	/^void KbPlot::setRanges(double _xmin, double _xmax, double _ymin, double _ymax){$/;"	f	class:KbPlot	signature:(double _xmin, double _xmax, double _ymin, double _ymax)
setScale	h/graphical_object.h	/^		void setScale(double,double);$/;"	p	class:GraphicalObject	access:public	signature:(double,double)
setScale	src/graphical_object.cpp	/^void GraphicalObject::setScale(double x, double y){$/;"	f	class:GraphicalObject	signature:(double x, double y)
setTranslation	h/graphical_object.h	/^		void setTranslation(double,double);$/;"	p	class:GraphicalObject	access:public	signature:(double,double)
setTranslation	src/graphical_object.cpp	/^void GraphicalObject::setTranslation(double x, double y){$/;"	f	class:GraphicalObject	signature:(double x, double y)
setWorkingArea	h/aglwidget.h	/^	virtual void setWorkingArea(double xmin, double xmax, double ymin, double ymax)=0;$/;"	p	class:AGLWidget	access:public	implementation:pure virtual	signature:(double xmin, double xmax, double ymin, double ymax)
setWorkingArea	h/glwidget.h	/^	virtual void setWorkingArea(double xmin, double xmax, double ymin, double ymax);$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:(double xmin, double xmax, double ymin, double ymax)
setWorkingArea	src/glwidget.cpp	/^void GLWidget::setWorkingArea(double xmin, double xmax, double ymin, double ymax){$/;"	f	class:GLWidget	signature:(double xmin, double xmax, double ymin, double ymax)
size	h/graphical_object.h	/^		size_t size;$/;"	m	class:Text	access:private
stAxisX	h/kbplot.h	/^		Style stAxisX, stAxisY, stBkgnd, stGridX, stGridY;$/;"	m	class:KbPlot	access:private
stAxisY	h/kbplot.h	/^		Style stAxisX, stAxisY, stBkgnd, stGridX, stGridY;$/;"	m	class:KbPlot	access:private
stBkgnd	h/kbplot.h	/^		Style stAxisX, stAxisY, stBkgnd, stGridX, stGridY;$/;"	m	class:KbPlot	access:private
stGridX	h/kbplot.h	/^		Style stAxisX, stAxisY, stBkgnd, stGridX, stGridY;$/;"	m	class:KbPlot	access:private
stGridY	h/kbplot.h	/^		Style stAxisX, stAxisY, stBkgnd, stGridX, stGridY;$/;"	m	class:KbPlot	access:private
staticMetaObject	moc_glwidget.cpp	/^const QMetaObject GLWidget::staticMetaObject = {$/;"	m	class:GLWidget	file:
stringdata	moc_glwidget.cpp	/^    char stringdata[10];$/;"	m	struct:qt_meta_stringdata_GLWidget_t	file:	access:public
style	h/graphical_object.h	/^		Style style;$/;"	m	class:GraphicalObject	access:public
subscribeToMouse	h/aglwidget.h	/^	virtual void subscribeToMouse(IMouseEventListener *subscriber)=0;$/;"	p	class:AGLWidget	access:public	implementation:pure virtual	signature:(IMouseEventListener *subscriber)
subscribeToMouse	h/glwidget.h	/^	virtual void subscribeToMouse(IMouseEventListener*);$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:(IMouseEventListener*)
subscribeToMouse	src/glwidget.cpp	/^void GLWidget::subscribeToMouse(IMouseEventListener*l){$/;"	f	class:GLWidget	signature:(IMouseEventListener*l)
text	h/graphical_object.h	/^		string text;$/;"	m	class:Text	access:private
textAlignment	h/graphical_object.h	/^	TextAlignment textAlignment = TEXT_ALIGN_CENTER;$/;"	m	struct:Style	access:public
textColor	h/graphical_object.h	/^	unsigned int textColor = 0xFFFFFFFF;$/;"	m	struct:Style	access:public
toggleFixed	h/graphical_object.h	/^		void toggleFixed(bool b = true);$/;"	p	class:GraphicalObject	access:public	signature:(bool b = true)
toggleFixed	src/graphical_object.cpp	/^void GraphicalObject::toggleFixed(bool b){$/;"	f	class:GraphicalObject	signature:(bool b)
toggleScaled	h/graphical_object.h	/^		void toggleScaled(bool b = true);$/;"	p	class:GraphicalObject	access:public	signature:(bool b = true)
toggleScaled	src/graphical_object.cpp	/^void GraphicalObject::toggleScaled(bool b){$/;"	f	class:GraphicalObject	signature:(bool b)
toggleTranslated	h/graphical_object.h	/^		void toggleTranslated(bool b = true);$/;"	p	class:GraphicalObject	access:public	signature:(bool b = true)
toggleTranslated	src/graphical_object.cpp	/^void GraphicalObject::toggleTranslated(bool b){$/;"	f	class:GraphicalObject	signature:(bool b)
trGLToScreenx	h/aglwidget.h	/^	virtual int trGLToScreenx(double)=0;$/;"	p	class:AGLWidget	access:public	implementation:pure virtual	signature:(double)
trGLToScreenx	h/glwidget.h	/^	virtual int trGLToScreenx(double);$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:(double)
trGLToScreenx	src/glwidget.cpp	/^int GLWidget::trGLToScreenx(double x){$/;"	f	class:GLWidget	signature:(double x)
trGLToScreeny	h/aglwidget.h	/^	virtual int trGLToScreeny(double)=0;$/;"	p	class:AGLWidget	access:public	implementation:pure virtual	signature:(double)
trGLToScreeny	h/glwidget.h	/^	virtual int trGLToScreeny(double);$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:(double)
trGLToScreeny	src/glwidget.cpp	/^int GLWidget::trGLToScreeny(double y){$/;"	f	class:GLWidget	signature:(double y)
trScreenToGLx	h/aglwidget.h	/^	virtual double trScreenToGLx(int)=0;$/;"	p	class:AGLWidget	access:public	implementation:pure virtual	signature:(int)
trScreenToGLx	h/glwidget.h	/^	virtual double trScreenToGLx(int);$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:(int)
trScreenToGLx	src/glwidget.cpp	/^double GLWidget::trScreenToGLx(int x){$/;"	f	class:GLWidget	signature:(int x)
trScreenToGLy	h/aglwidget.h	/^	virtual double trScreenToGLy(int)=0;$/;"	p	class:AGLWidget	access:public	implementation:pure virtual	signature:(int)
trScreenToGLy	h/glwidget.h	/^	virtual double trScreenToGLy(int);$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:(int)
trScreenToGLy	src/glwidget.cpp	/^double GLWidget::trScreenToGLy(int y){$/;"	f	class:GLWidget	signature:(int y)
trX	h/graphical_object.h	/^		double trX, trY;$/;"	m	class:GraphicalObject	access:protected
trY	h/graphical_object.h	/^		double trX, trY;$/;"	m	class:GraphicalObject	access:protected
wheelEvent	h/glwidget.h	/^	void wheelEvent(QWheelEvent *e);$/;"	p	class:GLWidget	access:public	signature:(QWheelEvent *e)
wheelEvent	src/glwidget.cpp	/^void GLWidget::wheelEvent(QWheelEvent *e){$/;"	f	class:GLWidget	signature:(QWheelEvent *e)
x	h/graphical_object.h	/^		double x, y;$/;"	m	class:Text	access:private
x	h/txy.h	/^	double x,y;$/;"	m	struct:Txy	access:public
x1	h/graphical_object.h	/^		double x1,x2,y1,y2;$/;"	m	class:Line	access:private
x2	h/graphical_object.h	/^		double x1,x2,y1,y2;$/;"	m	class:Line	access:private
xgrid	h/kbplot.h	/^		std::vector<Line*> xgrid;$/;"	m	class:KbPlot	access:private
xgtick	h/kbplot.h	/^		double xgtick, ygtick;$/;"	m	class:KbPlot	access:private
xmax	h/kbplot.h	/^		double xmax, ymax, xmin, ymin;$/;"	m	class:KbPlot	access:private
xmin	h/kbplot.h	/^		double xmax, ymax, xmin, ymin;$/;"	m	class:KbPlot	access:private
xtick	h/kbplot.h	/^		double xtick, ytick;$/;"	m	class:KbPlot	access:private
xticks_b	h/kbplot.h	/^		std::vector<Line*> xticks_b;$/;"	m	class:KbPlot	access:private
xticks_t	h/kbplot.h	/^		std::vector<Line*> xticks_t;$/;"	m	class:KbPlot	access:private
y	h/graphical_object.h	/^		double x, y;$/;"	m	class:Text	access:private
y	h/txy.h	/^	double x,y;$/;"	m	struct:Txy	access:public
y1	h/graphical_object.h	/^		double x1,x2,y1,y2;$/;"	m	class:Line	access:private
y2	h/graphical_object.h	/^		double x1,x2,y1,y2;$/;"	m	class:Line	access:private
ygrid	h/kbplot.h	/^		std::vector<Line*> ygrid;$/;"	m	class:KbPlot	access:private
ygtick	h/kbplot.h	/^		double xgtick, ygtick;$/;"	m	class:KbPlot	access:private
ymax	h/kbplot.h	/^		double xmax, ymax, xmin, ymin;$/;"	m	class:KbPlot	access:private
ymin	h/kbplot.h	/^		double xmax, ymax, xmin, ymin;$/;"	m	class:KbPlot	access:private
ytick	h/kbplot.h	/^		double xtick, ytick;$/;"	m	class:KbPlot	access:private
yticks_l	h/kbplot.h	/^		std::vector<Line*> yticks_l;$/;"	m	class:KbPlot	access:private
yticks_r	h/kbplot.h	/^		std::vector<Line*> yticks_r;$/;"	m	class:KbPlot	access:private
~AGLWidget	h/aglwidget.h	/^	virtual ~AGLWidget(){};$/;"	f	class:AGLWidget	access:public	implementation:virtual	signature:()
~DataSet	h/kbplot.h	/^		virtual ~DataSet();$/;"	p	struct:DataSet	access:public	implementation:virtual	signature:()
~DataSet	src/kbplot.cpp	/^DataSet::~DataSet(){$/;"	f	class:DataSet	signature:()
~GLWidget	h/glwidget.h	/^	virtual ~GLWidget();$/;"	p	class:GLWidget	access:public	implementation:virtual	signature:()
~GLWidget	src/glwidget.cpp	/^ GLWidget::~GLWidget(){$/;"	f	class:GLWidget	signature:()
~GraphicalObject	h/graphical_object.h	/^		virtual ~GraphicalObject(){};$/;"	f	class:GraphicalObject	access:public	implementation:virtual	signature:()
~IMouseEventListener	h/event.h	/^	virtual ~IMouseEventListener() {};$/;"	f	class:IMouseEventListener	access:public	implementation:virtual	signature:()
~KbPlot	h/kbplot.h	/^		~KbPlot();$/;"	p	class:KbPlot	access:public	signature:()
~KbPlot	src/kbplot.cpp	/^KbPlot::~KbPlot(){$/;"	f	class:KbPlot	signature:()
~Line	h/graphical_object.h	/^		virtual ~Line(){};$/;"	f	class:Line	access:public	implementation:virtual	signature:()
~MarkerSet	h/graphical_object.h	/^		virtual ~MarkerSet (){};$/;"	f	class:MarkerSet	access:public	implementation:virtual	signature:()
~Polygon	h/graphical_object.h	/^		virtual ~Polygon(){};$/;"	f	class:Polygon	access:public	implementation:virtual	signature:()
~Polyline	h/graphical_object.h	/^		virtual ~Polyline(){qDebug() << "Destroying polyline";};$/;"	f	class:Polyline	access:public	implementation:virtual	signature:()
~Text	h/graphical_object.h	/^		~Text(){};$/;"	f	class:Text	access:public	signature:()
